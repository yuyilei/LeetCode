/*
给定两个整数 n 和 k，你需要实现一个数组，这个数组包含从 1 到 n 的 n 个不同整数，同时满足以下条件：

① 如果这个数组是 [a1, a2, a3, ... , an] ，那么数组 [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] 中应该有且仅有 k 个不同整数；.

② 如果存在多种答案，你只需实现并返回其中任意一种.

示例 1:

输入: n = 3, k = 1
输出: [1, 2, 3]
解释: [1, 2, 3] 包含 3 个范围在 1-3 的不同整数， 并且 [1, 1] 中有且仅有 1 个不同整数 : 1
 

示例 2:

输入: n = 3, k = 2
输出: [1, 3, 2]
解释: [1, 3, 2] 包含 3 个范围在 1-3 的不同整数， 并且 [2, 1] 中有且仅有 2 个不同整数: 1 和 2
 

提示:

 n 和 k 满足条件 1 <= k < n <= 104.

*/

// k 个 不同的差值，就是1，2，3，4，..., k
// 所以先依次满足k, k-1, k-2, ..., 1的差值
// 前k+1个数是n到n-k的排列，分别为n, n-k, n-1, n-k+1, n-2, n-k+2, n-3, n-k+3...
// 它们之间的差值的绝对值是k, k-1，k-2，k-3，k-4
// 可以看出，前k+1个数中，奇数位是n开始步长为1的递减数列，偶数位是n-k开始步长位1的递增数列
// k+2之后的序列，就是n-k+1开始的步长为1的递减序列，它们之间的差值都是1，不会超过k
// 第k+1个数是n-k/2+1或n-k/2，第k+2个数是n-k+1，它们差值的绝对值也不会超过k

class Solution {
public:
    vector<int> constructArray(int n, int k) {
        vector<int> res (n, 0);
        int a = n;
        int b = n-k;
        for (int i = 0 ; i <= k ; i++ ) {
            if (i % 2 == 0)
                res[i] = a--;
            else
                res[i] = b++;
        }
        int c = n-k-1;
        for (int i = k+1 ; i < n ; i++ ) {
            res[i] = c--;
        }
        return res;
    }
};
