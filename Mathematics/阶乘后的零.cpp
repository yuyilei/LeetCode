/*
给定一个整数 n，返回 n! 结果尾数中零的数量。

示例 1:

输入: 3
输出: 0
解释: 3! = 6, 尾数中没有零。
示例 2:

输入: 5
输出: 1
解释: 5! = 120, 尾数中有 1 个零.
说明: 你算法的时间复杂度应为 O(log n) 。
*/

// 0的个数就是 1 到 n 中所有数的 5 的因数，因为 2 * 5 = 10，而且2的个数一定足够，所以只要统计 1 到 n的所有数含有5的个数（25就是含有两个5）
// 思路：n / 5 统计含有5的个数，n / 25 统计含有25的个数
class Solution {
public:
    int trailingZeroes(int n) {
        int res = 0;
        while ( n > 1 ) {
            res += ( n / 5 );
            n /= 5;
        }
        return res;
    }
};
